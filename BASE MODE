#include <FastLED.h>

#define NUM_LEDS 72  // 12 led's per strip attachment
#define DATA_PIN 3

CRGB leds[NUM_LEDS];

int bow[24] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 70, 71, 21, 11, 10 };

int Shell[23] = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 38, 50, 51, 56, 58, 59, 65, 66, 67, 68, 69 };

int bell_Top[3] = { 43, 44, 64 };

int bell1[8] = { 32, 33, 35, 37, 39, 40, 41, 42 };
int bell2[7] = { 45, 46, 48, 49, 52, 53, 47 };
int bell3[7] = { 62, 54, 55, 57, 60, 61, 63 };

void setup() {
  FastLED.addLeds<WS2812, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed

  //Bow Turns On
  for (int i = 0; i < 24; i++) {
    leds[bow[i]] = CRGB::Red;
  }
  //Shell Turns On
  for (int i = 0; i < 23; i++) {
    leds[Shell[i]] = CRGB::Green;
  }
  FastLED.show();
}

void loop() {

// Turns Second Bell Off
  for (int i = 0; i < 7; i++) {
    leds[bell2[i]] = CRGB::Black;
    leds[bell_Top[1]] = CRGB::Black;
    FastLED.show();
  }
//Turns First Bell On
  for (int i = 0; i < 8; i++) {
    leds[bell1[i]] = CRGB::Yellow;
    leds[bell_Top[0]] = CRGB::Yellow;
    FastLED.show();
  }
  delay(1000);

// Turns First Bell Off
  for (int i = 0; i < 8; i++) {
    leds[bell1[i]] = CRGB::Black;
    leds[bell_Top[0]] = CRGB::Black;
  }
// Turns Second Bell On
  for (int i = 0; i < 7; i++) {
    leds[bell2[i]] = CRGB::Yellow;
    leds[bell_Top[1]] = CRGB::Yellow;
  }
  FastLED.show();
  delay(1000);

// Turns Second Bell Off & Last Bell On
  for (int i = 0; i < 7; i++) {
    leds[bell2[i]] = CRGB::Black;
    leds[bell_Top[1]] = CRGB::Black;
    leds[bell3[i]] = CRGB::Yellow;
    leds[bell_Top[2]] = CRGB::Yellow;
    FastLED.show();
  }
  delay(1000);

// Turns Last Bell Off & Second Bell On
  for (int i = 0; i < 7; i++) {
    leds[bell3[i]] = CRGB::Black;
    leds[bell_Top[2]] = CRGB::Black;
    leds[bell2[i]] = CRGB::Yellow;
    leds[bell_Top[1]] = CRGB::Yellow;
    FastLED.show();
  }
  delay(1000);
}
